// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  phone       String?
  name        String        @unique
  avatarImage String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  status      Status        @default(OK)
  role        Role          @default(USER)
  product     Product[]
  ChatRoom    ChatRoom[]
  ChatMessage ChatMessage[]
}

model Product {
  id            Int            @id @default(autoincrement())
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  title         String
  price         Int
  productStatus ProductStatus  @default(SELL)
  location      String         @default("TOKYO DAITO")
  description   String         @db.MediumText
  viewCount     Int?
  smallCategory SmallCategory  @relation(fields: [categoryId], references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  productImage  ProductImage[]
  ChatRoom      ChatRoom[]
  categoryId    Int
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  url       String
}

model MainCategory {
  id             Int              @id @default(autoincrement())
  code           Int
  name           String
  middleCategory MiddleCategory[]
}

model MiddleCategory {
  id             Int             @id @default(autoincrement())
  code           Int
  name           String
  SmallCategory  SmallCategory[]
  mainCategory   MainCategory    @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId Int
}

model SmallCategory {
  id             Int            @id @default(autoincrement())
  code           Int
  name           String
  middedCategory MiddleCategory @relation(fields: [middleCategory], references: [id])
  middleCategory Int
  Product        Product[]
}

model ChatRoom {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  creater     User          @relation(fields: [userId], references: [id])
  product     Product       @relation(fields: [productId], references: [id])
  productId   Int
  userId      Int
  ChatMessage ChatMessage[]
}

model ChatMessage {
  id         Int      @id @default(autoincrement())
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
  sender     User     @relation(fields: [senderId], references: [id])
  chatRoomId Int
  senderId   Int
  message    String
  read       Read     @default(N)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum Read {
  Y
  N
}

enum ProductStatus {
  SELL
  SOLD
  RESERVED
}

enum Status {
  OK
  BAN
}
